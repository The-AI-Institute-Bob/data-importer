name: Release
on:
  push:
    branches:
      - main
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: configure AWS
        env:
          CODEARTIFACT_DOMAIN: ${{ secrets.CODEARTIFACT_DOMAIN }}
          CODEARTIFACT_DOMAIN_OWNER: ${{ secrets.CODEARTIFACT_DOMAIN_OWNER }}
          CODEARTIFACT_REGISTRIE: ${{ secrets.CODEARTIFACT_REGISTRIE }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: setup codeartifact
        run: |
          export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain ${{ secrets.CODEARTIFACT_DOMAIN }} --domain-owner ${{ secrets.CODEARTIFACT_DOMAIN_OWNER }} --query authorizationToken --output text`
          yarn config set 'npmRegistries["https://professorbob-ai-291845142233.d.codeartifact.eu-west-3.amazonaws.com/npm/npm.registery.profressorbob/"].npmAuthToken' "${CODEARTIFACT_AUTH_TOKEN}"
          echo "::set-output name=AUTH_TOKEN::${CODEARTIFACT_AUTH_TOKEN}"
        id: setup-codeartifact
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
      - name: Activate Yarn
        run: |
          corepack enable
          yarn set version berry
      - name: global packages
        run: npm install -g semantic-release semantic-release-codeartifact @semantic-release/exec
      - name: Install dependencies
        run: yarn install --immutable
        working-directory: Node
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          NPM_TOKEN: ${{ steps.setup-codeartifact.outputs.AUTH_TOKEN }}
        run: semantic-release --debug
        working-directory: Node
      - name: Build, tag, and push the image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_REPO_NAME }}
        run:
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA} $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          echo "Pushing image to ECR..."
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
